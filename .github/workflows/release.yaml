name: release-flow

on:
  push:
    branches:
      - "master"
        # tags:
        #- "[0-9]+.[0-9]+.[0-9]+*"

env:
  binary: bevsnake
  package_assets: false

jobs:
  release:
    runs-on: ${{ matrix.target.image_name }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - channel: linux
            image_name: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            features: default
          - channel: wasm
            image_name: ubuntu-latest
            target: wasm32-unknown-unknown
            features: web
    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target.target }}
          override: true
      - name: archive extension setup
        shell: pwsh
        run: |
          switch ( "${{ matrix.target.channel }}" )
          {
            "macos" { echo "extension=dmg" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append }
            default { echo "extension=zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append }
          }

      - name: linux setup
        if: matrix.target.channel == 'linux'
        run: |
          sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev
      - name: wasm setup
        if: matrix.target.channel == 'wasm'
        run: |
          cargo install wasm-bindgen-cli

      - name: build
        run: |
          cargo build --release --target ${{ matrix.target.target }} --no-default-features --features=${{ matrix.target.features}}

      - name: linux finish
        if: matrix.target.channel == 'linux'
        run: |
          mkdir linux
          cp target/${{ matrix.target.target }}/release/${{ env.binary }} linux/
          strip linux/${{ env.binary }}
          if [ "${{ env.package_assets }}" != "false" ]
          then
            cp -r assets linux/
          fi
      - name: wasm finish
        if: matrix.target.channel == 'wasm'
        run: |
          wasm-bindgen --no-typescript --out-name ${{ env.binary }} --out-dir wasm --target web target/${{ matrix.target.target }}/release/${{ env.binary }}.wasm
          if [ "${{ env.package_assets }}" != "false" ]
          then
            cp -r assets wasm/
          fi

      - name: linux packaging
        if: matrix.target.channel == 'linux'
        uses: papeloto/action-zip@v1
        with:
          files: linux
          dest: ${{ env.binary }}.${{ env.extension }}
      - name: wasm packaging
        if: matrix.target.channel == 'wasm'
        uses: papeloto/action-zip@v1
        with:
          files: wasm
          dest: ${{ env.binary }}.${{ env.extension }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.binary }}.${{ env.extension }}
          asset_name: ${{ env.binary }}-${{ matrix.target.channel }}-${{ steps.get_version.outputs.tag }}.${{ env.extension }}
          tag: ${{ github.ref }}
          overwrite: true

      - name: save artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.target.channel }}-release
          path: ${{ env.binary }}.${{ env.extension }}
      
      - name: Deploy ðŸš€
        if: matrix.target.channel == 'wasm'
        uses: JamesIves/github-pages-deploy-action@3.6.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: wasm
